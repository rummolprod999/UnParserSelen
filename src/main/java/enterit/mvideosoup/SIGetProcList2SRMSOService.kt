package enterit.mvideosoup

import java.net.MalformedURLException
import java.net.URL
import javax.xml.namespace.QName
import javax.xml.ws.*


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01
 * Generated source version: 2.2
 *
 */
@WebServiceClient(name = "SI_GetProcList_2_SRM_SOService", targetNamespace = "http://mvideo.ru/SRM/GetProcList", wsdlLocation = "https://ep.mvideo.ru/srm/api/etender/wsdl")
class SIGetProcList2SRMSOService : Service {

    /**
     *
     * @return
     * returns SIGetProcList2SRMSO
     */
    val httpsPort: SIGetProcList2SRMSO
        @WebEndpoint(name = "HTTPS_Port")
        get() = super.getPort(QName("http://mvideo.ru/SRM/GetProcList", "HTTPS_Port"), SIGetProcList2SRMSO::class.java)

    constructor() : super(__getWsdlLocation(), SIGETPROCLIST2SRMSOSERVICE_QNAME) {}

    constructor(vararg features: WebServiceFeature) : super(__getWsdlLocation(), SIGETPROCLIST2SRMSOSERVICE_QNAME, *features) {}

    constructor(wsdlLocation: URL) : super(wsdlLocation, SIGETPROCLIST2SRMSOSERVICE_QNAME) {}

    constructor(wsdlLocation: URL, vararg features: WebServiceFeature) : super(wsdlLocation, SIGETPROCLIST2SRMSOSERVICE_QNAME, *features) {}

    constructor(wsdlLocation: URL, serviceName: QName) : super(wsdlLocation, serviceName) {}

    constructor(wsdlLocation: URL, serviceName: QName, vararg features: WebServiceFeature) : super(wsdlLocation, serviceName, *features) {}

    /**
     *
     * @param features
     * A list of [javax.xml.ws.WebServiceFeature] to configure on the proxy.  Supported features not in the `features` parameter will have their default values.
     * @return
     * returns SIGetProcList2SRMSO
     */
    @WebEndpoint(name = "HTTPS_Port")
    fun getHTTPSPort(vararg features: WebServiceFeature): SIGetProcList2SRMSO {
        return super.getPort(QName("http://mvideo.ru/SRM/GetProcList", "HTTPS_Port"), SIGetProcList2SRMSO::class.java, *features)
    }

    companion object {

        private val SIGETPROCLIST2SRMSOSERVICE_WSDL_LOCATION: URL?
        private val SIGETPROCLIST2SRMSOSERVICE_EXCEPTION: WebServiceException?
        private val SIGETPROCLIST2SRMSOSERVICE_QNAME = QName("http://mvideo.ru/SRM/GetProcList", "SI_GetProcList_2_SRM_SOService")

        init {
            var url: URL? = null
            var e: WebServiceException? = null
            try {
                url = URL("https://ep.mvideo.ru/srm/api/etender/wsdl")
            } catch (ex: MalformedURLException) {
                e = WebServiceException(ex)
            }

            SIGETPROCLIST2SRMSOSERVICE_WSDL_LOCATION = url
            SIGETPROCLIST2SRMSOSERVICE_EXCEPTION = e
        }

        private fun __getWsdlLocation(): URL? {
            if (SIGETPROCLIST2SRMSOSERVICE_EXCEPTION != null) {
                throw SIGETPROCLIST2SRMSOSERVICE_EXCEPTION
            }
            return SIGETPROCLIST2SRMSOSERVICE_WSDL_LOCATION
        }
    }

}
